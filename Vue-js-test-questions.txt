Question 1: 

 I need to display the follwing data in this page:
            i) Original price 
            ii) Discount
            iii) Sale price

* i and ii are given or initialized when the page loads.
* iii is calculated as : Sale price = (Original price) - discount

Update the component Question1.vue to render the above data using string interpolation



Question 2: 

Question2.vue is the  parent component with the data property 'rating', initialized to 1.
Component 'Child1.vue' is rendered within this component and the 'rating' property is passed into the child component.
The child component displays both the parent rating and its own rating. The child component has a button to increase the child rating.
How would you increase the parent's 'rating' whenever the child's rating is increased ?

Question 3:
In Question3.vue I want to display the following messages on certain events: 
1. "I am destroyed" - When the component is about to be removed from the DOM
2. "I am created" - When the component is created
3. "I am in the DOM" - When the component is added to the DOM
4. "I am about to be introduced to the DOM" - When the component is about to be added to the DOM
5. "I am being created" - When the component is being created

Question 4: 

Question4.vue is the parent component. Component 'Child2.vue' is rendered within this component.
Child2.vue has two containers , one for header and one for body. 
The parent component must be able to provide the content, including the html elements, that needs to be rendered within these containers.
How would you would you achieve this?


Question 5: 

Question5.vue is a simple component displaying the text 'Change my attributes'. It has two properties isError and isBold.
There are three buttons , one to set isError = true, one to set isBold = true and one to set both to false.

I want to change the color of the displayed text to 'red' when 'isError' is true,  make the text bold  when 'isBold' is true
and revert back to the original text when reset is clicked.

How would you achieve this?


Question 6: 

Question6.vue is a component with two containers elements. The component data is an array of students with 'id' and 'name'. 
I want to display the names of the students whose ids are multiples of 2 in container 1 and whose ids are multiples of 3 in container 2.
How would you achieve this?


Question 7: 

I want to collect some information from the user by rendering a form. The form should have the following fields:
1) Full name (text input)
2) Age (text input)
3) Gender (radio buttons)
4) Programming languages (check boxes with 3 options. i) Vuejs ii) C# iii) Angular )

There should be a submit button at the end, on clicking it display the collected details below

Question 7a:

Assuming you have created the form in question 7. I want to collect additional information if the user's age is above 22 and he likes the programming language 'Vue js'.
So if the above conditions are met, then add one  more element in the form : 
1) Experience - A select dropdown with the options : (1 year, 2 years , 3 years and  4 years and above)


Question 7b: 

Assuming you have created the form in quesiont 7. On clicking submit , I want to navigate the user to a different page and display his name , age and his favourite programming languages

Add a new page to display his details and add the logic to redirect the user to the new page on submit.

Question 8 :

Question8.vue is the parent component which has an array of items. 
Button Add to top - Adds a new item to the beginning of the list
The value of each item is the length of the array before the item is added.

I want to render Component Child3.vue for each item in the list.
Child3.vue takes in two props (index and item), and sets its own item value called myItem based on the item prop.

Expectation : 
On adding multiple items to the list, ensure that the data is shown correctly.
The value of the new item added should be at the top of the list.


Question 9 :

XYXZ is a restaraunt with an online ordering app.
The app has a page to display all the items available for ordering. Each item has an image with the name of the item displayed below it along with its price. 
There is an option to select an item and it gets automatically added to my order.  I can also view additional details of an Item by clicking on it, which displays a popup with a detailed description of the item
There is another page where I can view my current order. This page which lists the items that I have selected. I can view the details for each item by clicking on it, which displays a popup with a detailed description of the item
Each item has an option to add add-ons, selecting the option displays a pop up with a list of add-ons available for the selected item, allowing you to select one or more add-ons

Write down component design required to achieve this UI. Follow the following format to list down the components

Components  
    - List down the components that are shared or used within the components in /Views

Views
    - List down the componenst that represent the pages for different routes

Note: Only list down the components in the above format in a text file. Don't need to create the actual app
